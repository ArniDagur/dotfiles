#!/usr/bin/env python3
import brotli
import gzip
import argparse


def parse_arguments() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description="Print file size and gzipped size.")
    parser.add_argument("file", metavar="FILE", help="file to be analyzed")
    return parser.parse_args()


def format_size(size: int) -> str:
    """
    Format byte size as a human-readable string.
    """
    for unit in ["B", "KB", "MB", "GB", "TB"]:
        if size < 1024:
            if int(size) == size:
                return f"{size:d} {unit}"
            return f"{size:.2f} {unit}"
        size /= 1024
    return f"{size:.2f} PB"


def do_sz(path):
    with open(path, "rb") as f:
        data = f.read()
        gzip_compressed = gzip.compress(data)
        brotli_compressed = brotli.compress(data)
        print(
            f"{path}: {format_size(len(data))} "
            f"(gzip: {format_size(len(gzip_compressed))}) "
            f"(brotli: {format_size(len(brotli_compressed))})"
        )


def main():
    args = parse_arguments()
    try:
        do_sz(args.file)
    except FileNotFoundError:
        print(f"{args.file}: No such file or directory")
        return 1
    return 0


if __name__ == "__main__":
    exit(main())
